#pragma once

#include <cstdint>

namespace Frertex::Transpilers::SPIRV
{
	enum class EExecutionModel : std::uint32_t
	{
		Vertex = 0,
		TessellationControl,
		TessellationEvaluation,
		Geometry,
		Fragment,
		GLCompute,
		Kernel,
		TaskNV = 5267,
		MeshNV,
		RayGenerationNV  = 5313,
		RayGenerationKHR = 5313,
		IntersectionNV,
		IntersectionKHR = 5314,
		AnyHitNV,
		AnyHitKHR = 5315,
		ClosestHitNV,
		ClosestHitKHR = 5316,
		MissNV,
		MissKHR = 5317,
		CallableNV,
		CallableKHR = 5318
	};

	enum class EAddressingMode : std::uint32_t
	{
		Logical = 0,
		Physical32,
		Physical64,
		PhysicalStorageBuffer64    = 5348,
		PhysicalStorageBuffer64EXT = 5348,
	};

	enum class EMemoryModel : std::uint32_t
	{
		Simple = 0,
		GLSL450,
		OpenCL,
		Vulkan,
		VulkanKHR = 3
	};

	enum class EExecutionMode : std::uint32_t
	{
		Invocations = 0,
		SpacingEqual,
		SpacingFractionalEven,
		SpacingFractionalOdd,
		VertexOrderCw,
		VertexOrderCcw,
		PixelCenterInteger,
		OriginUpperLeft,
		OriginLowerLeft,
		EarlyFragmentTests,
		PointMode,
		Xfb,
		DepthReplacing,
		DepthGreater = 14,
		DepthLess,
		DepthUnchanged,
		LocalSize,
		LocalSizeHint,
		InputPoints,
		InputLines,
		InputLinesAdjacency,
		Triangles,
		InputTrianglesAdjacency,
		Quads,
		Isolines,
		OutputVertices,
		OutputPoints,
		OutputLineStrip,
		OutputTriangleStrip,
		VecTypeHint,
		ContractionOff,
		Initializer = 33,
		Finalizer,
		SubgroupSize,
		SubgroupsPerWorkgroup,
		SubgroupsPerWorkgroupId,
		LocalSizeId,
		LocalSizeHintId,
		SubgroupUniformControlFlowKHR = 4421,
		PostDepthCoverage             = 4446,
		DenormPreserve                = 4459,
		DenormFlushToZero,
		SignedZeroInfNanPreserve,
		RoundingModeRTE,
		RoundingModeRTZ,
		EarlyAndLateFragmentTestsAMD = 5017,
		StencilRefReplacingEXT       = 5027,
		StencilRefUnchangedFrontAMD  = 5079,
		StencilRefGreaterFrontAMD,
		StencilRefLessFrontAMD,
		StencilRefUnchangedBackAMD,
		StencilRefGreaterBackAMD,
		StencilRefLessBackAMD,
		OutputLinesNV = 5269,
		OutputPrimitivesNV,
		DerivativeGroupQuadsNV = 5289,
		DerivativeGroupLinearNV,
		OutputTrianglesNV        = 5298,
		PixelInterlockOrderedEXT = 5366,
		PixelInterlockUnorderedEXT,
		SampleInterlockOrderedEXT,
		SampleInterlockUnorderedEXT,
		ShadingRateInterlockOrederedEXT,
		ShadingRateInterlockUnorderedEXT,
		SharedLocalMemorySizeINTEL = 5618,
		RoundingModeRTPINTEL       = 5620,
		RoundingModeRTNINTEL,
		FloatingPointModeALTINTEL,
		FloatingPointModeIEEEINTEL,
		MaxWorkgroupSizeINTEL = 5893,
		MaxWorkDimINTEL,
		NoGlobalOffsetINTEL,
		NumSIMDWorkitemsINTEL,
		SchedulerTargetFmaxMhzINTEL = 5903,
		NamedBarrierCountINTEL      = 6417
	};

	enum class EStorageClass : std::uint32_t
	{
		UniformConstant = 0,
		Input,
		Uniform,
		Output,
		Workgroup,
		CrossWorkgroup,
		Private,
		Function,
		Generic,
		PushConstant,
		AtomicCounter,
		Image,
		StorageBuffer,
		CallableDataNV  = 5328,
		CallableDataKHR = 5328,
		IncomingCallableDataNV,
		IncomingCallableDataKHR = 5329,
		RayPaylodNV             = 5338,
		RayPaylodKHR            = 5338,
		HitAttributeNV,
		HitAttributeKHR                  = 5339,
		IncomingRayPaylodHitAttributeNV  = 5342,
		IncomingRayPaylodHitAttributeKHR = 5342,
		ShaderRecordBufferNV,
		ShaderRecordBufferKHR    = 5343,
		PhysicalStorageBuffer    = 5349,
		PhysicalStorageBufferEXT = 5349,
		CodeSectionINTEL         = 5605,
		DeviceOnlyINTEL          = 5936,
		HostOnlyINTEL
	};

	enum class EDim : std::uint32_t
	{
		OneDim = 0,
		TwoDim,
		ThreeDim,
		Cube,
		Rect,
		Buffer,
		SubpassData
	};

	enum class ESamplerAddressingMode : std::uint32_t
	{
		None = 0,
		ClampToEdge,
		Clamp,
		Repeat,
		RepeatMirrored
	};

	enum class ESamplerFilterMode : std::uint32_t
	{
		Nearest = 0,
		Linear
	};

	enum class EImageFormat : std::uint32_t
	{
		Unknown = 0,
		Rgba32f,
		Rgba16f,
		R32f,
		Rgba8,
		Rgba8Snorm,
		Rg32f,
		Rg16f,
		R11fG11fB10f,
		R16f,
		Rgba15,
		Rgb10A2,
		Rg16,
		Rg8,
		R16,
		R8,
		Rgba16Snorm,
		Rg16Snorm,
		Rg8Snorm,
		R16Snorm,
		R8Snorm,
		Rgba32i,
		Rgba16i,
		Rgba8i,
		R32i,
		Rg32i,
		Rg16i,
		Rg8i,
		R16i,
		R8i,
		Rgba32ui,
		Rgba16ui,
		Rgba8ui,
		R32ui,
		Rgb10a2ui,
		Rg32ui,
		Rg16ui,
		Rg8ui,
		R16ui,
		R8ui,
		R64ui,
		R64i
	};

	enum class EImageChannelOrder : std::uint32_t
	{
		R = 0,
		A,
		RG,
		RA,
		RGB,
		RGBA,
		BGRA,
		ARGB,
		Intensity,
		Luminance,
		Rx,
		RGx,
		RGBx,
		Depth,
		DepthStencil,
		sRGB,
		sRGBx,
		sRGBA,
		sBGRA,
		ABGR
	};

	enum class EImageChannelDataType : std::uint32_t
	{
		SnormInt8 = 0,
		SnormInt16,
		UnormInt8,
		UnormInt16,
		UnormShort565,
		UnormShort555,
		UnormInt101010,
		SignedInt8,
		SignedInt16,
		SignedInt32,
		UnsignedInt8,
		UnsignedInt16,
		UnsignedInt32,
		HalfFloat,
		Float,
		UnormInt24,
		UnormInt101010_2
	};

	enum class EImageOperands : std::uint32_t
	{
		None                  = 0x0'0000,
		Bias                  = 0x0'0001,
		Lod                   = 0x0'0002,
		Grad                  = 0x0'0004,
		ConstOffset           = 0x0'0008,
		Offset                = 0x0'0010,
		ConstOffsets          = 0x0'0020,
		Sample                = 0x0'0040,
		MinLod                = 0x0'0080,
		MakeTexelAvailable    = 0x0'0100,
		MakeTexelAvailableKHR = 0x0'0100,
		MakeTexelVisible      = 0x0'0200,
		MakeTexelVisibleKHR   = 0x0'0200,
		NonPrivateTexel       = 0x0'0400,
		NonPrivateTexelKHR    = 0x0'0400,
		VolatileTexel         = 0x0'0800,
		VolatileTexelKHR      = 0x0'0800,
		SignExtend            = 0x0'1000,
		ZeroExtend            = 0x0'2000,
		Nontemporal           = 0x0'4000,
		Offsets               = 0x1'0000
	};

	enum class EFPFastMathMode : std::uint32_t
	{
		None                   = 0x0'0000,
		NotNaN                 = 0x0'0001,
		NotInf                 = 0x0'0002,
		NSZ                    = 0x0'0004,
		AllowRecip             = 0x0'0008,
		Fast                   = 0x0'0010,
		AllowContractFastINTEL = 0x1'0000,
		AllowReassocINTEL      = 0x2'0000
	};

	enum class EFPRoundingMode : std::uint32_t
	{
		RTE = 0,
		RTZ,
		RTP,
		RTN
	};

	enum class ELinkageType : std::uint32_t
	{
		Export = 0,
		Import,
		LinkOnceODR
	};

	enum class EAccessQualifier : std::uint32_t
	{
		ReadOnly = 0,
		WriteOnly,
		ReadWrite,
		None = 0xFFFF'FFFF
	};

	enum class EFunctionParameterAttribute : std::uint32_t
	{
		Zext = 0,
		Sext,
		ByVal,
		Sret,
		NoAlias,
		NoCapture,
		NoWrite,
		NoReadWrite
	};

	enum class EFunctionControl : std::uint32_t
	{
		None         = 0x0'0000,
		Inline       = 0x0'0001,
		DontInline   = 0x0'0002,
		Pure         = 0x0'0004,
		Const        = 0x0'0008,
		OptNoneINTEL = 0x1'0000
	};

	enum class ECapability : std::uint32_t
	{
		Matrix = 0,
		Shader,
		Geometry,
		Tessellation,
		Addresses,
		Linkage,
		Kernel,
		Vector16,
		Float16Buffer,
		Float16,
		Float64,
		Int64,
		Int64Atomics,
		ImageBasic,
		ImageReadWrite,
		ImageMipmap,
		Pipes = 17,
		Groups,
		DeviceEnqueue,
		LiteralSampler,
		AtomicStorage,
		Int16,
		TessellationPointSize,
		GeometryPointSize,
		ImageGatherExtended,
		StorageImageMultisample = 27,
		UniformBufferArrayDynamicIndexing,
		SampledImageArrayDynamicIndexing,
		StorageBufferArrayDynamicIndexing,
		StorageImageArrayDynamicIndexing,
		ClipDistance,
		CullDistance,
		ImageCubeArray,
		SampleRateShading,
		ImageRect,
		SampledRect,
		GenericPointer,
		Int8,
		InputAtachment,
		SparseResidency,
		MinLod,
		Sampled1D,
		Image1D,
		SampledCubeArray,
		SampledBuffer,
		ImageBuffer,
		ImageMSArray,
		StorageImageExtendedFormats,
		ImageQuery,
		DerivativeControl,
		InterpolationFunction,
		TransformFeedback,
		GeometryStreams,
		StorageImageReadWithoutFormat,
		StorageImageWriteWithoutFormat,
		MultiViewport,
		SubgroupDispatch,
		NamedBarrier,
		PipeStorage,
		GroupNonUniform,
		GroupNonUniformVote,
		GroupNonUniformArithmetic,
		GroupNonUniformBallot,
		GroupNonUniformShuffle,
		GroupNonUniformShuffleRelative,
		GroupNonUniformClustered,
		GroupNonUniformQuad,
		ShaderLayer,
		ShaderViewportIndex,
		UniformDecoration,
		FragmentShadingRateKHR = 4422,
		SubgroupBallotKHR,
		DrawParameters = 4427,
		WorkgroupMemoryExplicitLayoutKHR,
		WorkgroupMemoryExplicitLayout8BitAccessKHR,
		WorkgroupMemoryExplicitLayout16BitAccessKHR,
		SubgroupVoteKHR,
		StorageBuffer16BitAccess    = 4433,
		StorageUniformBufferBlock16 = 4433,
		UniformAndStorageBuffer16BitAccess,
		StorageUniform16 = 4434,
		StoragePushConstant16,
		StorageInputOutput16,
		DeviceGroup,
		MultiView                     = 4439,
		VariablePointersStorageBuffer = 4441,
		VariablePointers,
		AtomicStorageOps            = 4445,
		SampleMaskPostDepthCoverage = 4447,
		StorageBuffer8BitAccess,
		UniformAndStorageBuffer8BitAccess,
		StoragePushConstant8,
		DenormPreserve = 4464,
		DenormFlushToZero,
		SignedZeroInfNanPreserve,
		RoundingModeRTE,
		RoundingModeRTZ,
		RayQueryProvisionalKHR = 4471,
		RayQueryKHR,
		RayTraversalPrimitiveCullingKHR = 4478,
		RayTracingKHR,
		Float16ImageAMD = 5008,
		ImageGatherBiasLodAMD,
		FragmentMaskAMD,
		StencilExportEXT     = 5013,
		ImageReadWriteLodAMD = 5015,
		Int64ImageEXT,
		ShaderClockKHR               = 5055,
		SampleMaskOverrideCoverageNV = 5249,
		GeometryShaderPassthroughNV  = 5251,
		ShaderViewportIndexLayerEXT  = 5254,
		ShaderViewportIndexLayerNV   = 5254,
		ShaderViewportMaskNV,
		ShaderStereoViewNV = 5259,
		PerViewAttributesNV,
		FragmentFullyCoveredEXT = 5265,
		MeshShadingNV,
		ImageFootprintNV              = 5282,
		FragmentBarycentricKHR        = 5284,
		FragmentBarycentricNV         = 5284,
		ComputeDerivativeGroupQuadsNV = 5288,
		FragmentDensityEXT            = 5291,
		ShadingRateNV                 = 5291,
		GroupNonUniformPartitionedNV  = 5297,
		ShaderNonUniform              = 5301,
		ShaderNonUniformEXT           = 5301,
		RuntimeDescriptorArray,
		RuntimeDescriptorArrayEXT = 5302,
		InputAttachmentArrayDynamicIndexing,
		InputAttachmentArrayDynamicIndexingEXT = 5303,
		UniformTexelBufferArrayDynamicIndexing,
		UniformTexelBufferArrayDynamicIndexingEXT = 5304,
		StorageTexelBufferArrayDynamicIndexing,
		StorageTexelBufferArrayDynamicIndexingEXT = 5305,
		UniformBufferArrayNonUniformIndexing,
		UniformBufferArrayNonUniformIndexingEXT = 5306,
		SampledImageArrayNonUniformIndexing,
		SampledImageArrayNonUniformIndexingEXT = 5307,
		StorageBufferArrayNonUniformIndexing,
		StorageBufferArrayNonUniformIndexingEXT = 5308,
		StorageImageArrayNonUniformIndexing,
		StorageImageArrayNonUniformIndexingEXT = 5309,
		InputAttachmentArrayNonUniformIndexing,
		InputAttachmentArrayNonUniformIndexingEXT = 5310,
		UniformTexelBufferArrayNonUniformIndexing,
		UniformTexelBufferArrayNonUniformIndexingEXT = 5311,
		StorageTexelBufferArrayNonUniformIndexing,
		StorageTexelBufferArrayNonUniformIndexingEXT = 5312,
		RayTracingNV                                 = 5340,
		RayTracingMotionBlurNV,
		VulkanMemoryModel    = 5345,
		VulkanMemoryModelKHR = 5345,
		VulkanMemoryModelDeviceScope,
		VulkanMemoryModelDeviceScopeKHR = 5346,
		PhysicalStorageBufferAddresses,
		PhysicalStorageBufferAddressesEXT     = 5347,
		ComputeDerivateGroupLinearNV          = 5350,
		RayTracingProvisionalKHR              = 5353,
		CooperativeMatrixNV                   = 5357,
		FragmentShaderSampleInterlockEXT      = 5363,
		FragmentShaderShadingRateInterlockEXT = 5372,
		ShaderSMBuiltinsNV,
		FragmentShaderPixelInterlockEXT = 5378,
		DemoteToHelperInvocation        = 5379,
		DemoteToHelperInvocationEXT     = 5379,
		BindlessTextureNV               = 5390,
		SubgroupShuffleINTEL            = 5568,
		SubgroupBufferBlockIOINTEL,
		SubgroupImageBlockIOINTEL,
		SubgroupImageMediaBlockIOINTEL = 5579,
		RoundToInfinityINTEL           = 5582,
		FloatingPointModelINTEL,
		IntegerFunctions2INTEL,
		FunctionPointersINTEL = 5603,
		IndirectReferencesINTEL,
		AsmINTEL               = 5606,
		AtomicFloat32MinMaxEXT = 5612,
		AtomicFloat64MinMaxEXT,
		AtomicFloat165MinMaxEXT = 5616,
		VectorComputeINTEL,
		VectorAnyINTEL                   = 5619,
		ExpectAssumeKHR                  = 5629,
		SubgroupAvcMotionEstimationINTEL = 5696,
		SubgroupAvcMotionEstimationIntraINTEL,
		SubgroupAvcMotionEstimationChromaINTEL,
		VariableLengthArrayINTEL        = 5817,
		FunctionFloatControlINTEL       = 5821,
		FPGAMemoryAttributesINTEL       = 5824,
		FPFastMathModeINTEL             = 5837,
		ArbitraryPrecisionIntegersINTEL = 5844,
		ArbitraryPrecisionFloatingPOintINTEL,
		UnstructuredLoopControlsINTEL = 5886,
		FPGALoopControlsINTEL         = 5888,
		KernelAttributesINTEL         = 5892,
		FPGAKernelAttributesINTEL     = 5897,
		FPGAMemoryAccessesINTEL,
		FPGAClusterAttributesINTEL        = 5904,
		LoopFuseINTEL                     = 5906,
		MemoryAccessAliasingINTEL         = 5910,
		FPGABufferLocationINTEL           = 5920,
		ArbitraryPrecisionFixedPointINTEL = 5922,
		USMStorageClassesINTEL            = 5935,
		IOPipesINTEL                      = 5943,
		BlockingPipesINTEL                = 5945,
		FPGARegINTEL                      = 5948,
		DotProductInputAll                = 6016,
		DotProductInputAllKHR             = 6016,
		DotProductInput4x8Bit,
		DotProductInput4x8BitKHR = 6017,
		DotProductInput4x8BitPacket,
		DotProductInput4x8BitPacketKHR = 6018,
		DotProduct,
		DotProductKHR = 6019,
		RayCullMaskKHR,
		BlitInstructions = 6025,
		GroupNonUniformRotateKHR,
		AtomicFloat32AddEXT = 6033,
		AtomicFloat64AddEXT,
		LongConstantCompositeINTEL = 6089,
		OptNoneINTEL               = 6094,
		AtomicFloat16AddEXT,
		DebugInfoModuleINTEL      = 6114,
		SplitBarrierINTEL         = 6141,
		GroupUniformArithmeticKHR = 6400
	};
} // namespace Frertex::Transpilers::SPIRV